package rustelefonen.no.drikkevett_android.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import rustelefonen.no.drikkevett_android.db.DayAfterBAC;
import rustelefonen.no.drikkevett_android.db.GraphHistory;
import rustelefonen.no.drikkevett_android.db.History;
import rustelefonen.no.drikkevett_android.db.User;
import rustelefonen.no.drikkevett_android.db.PlanPartyElements;
import rustelefonen.no.drikkevett_android.db.InformationCategory;
import rustelefonen.no.drikkevett_android.db.Information;
import rustelefonen.no.drikkevett_android.db.Unit;
import rustelefonen.no.drikkevett_android.db.newHistory;

import rustelefonen.no.drikkevett_android.db.DayAfterBACDao;
import rustelefonen.no.drikkevett_android.db.GraphHistoryDao;
import rustelefonen.no.drikkevett_android.db.HistoryDao;
import rustelefonen.no.drikkevett_android.db.UserDao;
import rustelefonen.no.drikkevett_android.db.PlanPartyElementsDao;
import rustelefonen.no.drikkevett_android.db.InformationCategoryDao;
import rustelefonen.no.drikkevett_android.db.InformationDao;
import rustelefonen.no.drikkevett_android.db.UnitDao;
import rustelefonen.no.drikkevett_android.db.newHistoryDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dayAfterBACDaoConfig;
    private final DaoConfig graphHistoryDaoConfig;
    private final DaoConfig historyDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig planPartyElementsDaoConfig;
    private final DaoConfig informationCategoryDaoConfig;
    private final DaoConfig informationDaoConfig;
    private final DaoConfig unitDaoConfig;
    private final DaoConfig newHistoryDaoConfig;

    private final DayAfterBACDao dayAfterBACDao;
    private final GraphHistoryDao graphHistoryDao;
    private final HistoryDao historyDao;
    private final UserDao userDao;
    private final PlanPartyElementsDao planPartyElementsDao;
    private final InformationCategoryDao informationCategoryDao;
    private final InformationDao informationDao;
    private final UnitDao unitDao;
    private final newHistoryDao newHistoryDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dayAfterBACDaoConfig = daoConfigMap.get(DayAfterBACDao.class).clone();
        dayAfterBACDaoConfig.initIdentityScope(type);

        graphHistoryDaoConfig = daoConfigMap.get(GraphHistoryDao.class).clone();
        graphHistoryDaoConfig.initIdentityScope(type);

        historyDaoConfig = daoConfigMap.get(HistoryDao.class).clone();
        historyDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        planPartyElementsDaoConfig = daoConfigMap.get(PlanPartyElementsDao.class).clone();
        planPartyElementsDaoConfig.initIdentityScope(type);

        informationCategoryDaoConfig = daoConfigMap.get(InformationCategoryDao.class).clone();
        informationCategoryDaoConfig.initIdentityScope(type);

        informationDaoConfig = daoConfigMap.get(InformationDao.class).clone();
        informationDaoConfig.initIdentityScope(type);

        unitDaoConfig = daoConfigMap.get(UnitDao.class).clone();
        unitDaoConfig.initIdentityScope(type);

        newHistoryDaoConfig = daoConfigMap.get(newHistoryDao.class).clone();
        newHistoryDaoConfig.initIdentityScope(type);

        dayAfterBACDao = new DayAfterBACDao(dayAfterBACDaoConfig, this);
        graphHistoryDao = new GraphHistoryDao(graphHistoryDaoConfig, this);
        historyDao = new HistoryDao(historyDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        planPartyElementsDao = new PlanPartyElementsDao(planPartyElementsDaoConfig, this);
        informationCategoryDao = new InformationCategoryDao(informationCategoryDaoConfig, this);
        informationDao = new InformationDao(informationDaoConfig, this);
        unitDao = new UnitDao(unitDaoConfig, this);
        newHistoryDao = new newHistoryDao(newHistoryDaoConfig, this);

        registerDao(DayAfterBAC.class, dayAfterBACDao);
        registerDao(GraphHistory.class, graphHistoryDao);
        registerDao(History.class, historyDao);
        registerDao(User.class, userDao);
        registerDao(PlanPartyElements.class, planPartyElementsDao);
        registerDao(InformationCategory.class, informationCategoryDao);
        registerDao(Information.class, informationDao);
        registerDao(Unit.class, unitDao);
        registerDao(newHistory.class, newHistoryDao);
    }
    
    public void clear() {
        dayAfterBACDaoConfig.getIdentityScope().clear();
        graphHistoryDaoConfig.getIdentityScope().clear();
        historyDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        planPartyElementsDaoConfig.getIdentityScope().clear();
        informationCategoryDaoConfig.getIdentityScope().clear();
        informationDaoConfig.getIdentityScope().clear();
        unitDaoConfig.getIdentityScope().clear();
        newHistoryDaoConfig.getIdentityScope().clear();
    }

    public DayAfterBACDao getDayAfterBACDao() {
        return dayAfterBACDao;
    }

    public GraphHistoryDao getGraphHistoryDao() {
        return graphHistoryDao;
    }

    public HistoryDao getHistoryDao() {
        return historyDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public PlanPartyElementsDao getPlanPartyElementsDao() {
        return planPartyElementsDao;
    }

    public InformationCategoryDao getInformationCategoryDao() {
        return informationCategoryDao;
    }

    public InformationDao getInformationDao() {
        return informationDao;
    }

    public UnitDao getUnitDao() {
        return unitDao;
    }

    public newHistoryDao getNewHistoryDao() {
        return newHistoryDao;
    }

}
